{"version":3,"file":"static/chunks/app/portfolio/page-0e1f676818ce4c6f.js","mappings":"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","sources":["webpack://_N_E/?3504","webpack://_N_E/./src/styles/motion.tsx","webpack://_N_E/./src/app/portfolio/page.tsx","webpack://_N_E/./src/modules/searchSlice.ts","webpack://_N_E/./src/modules/hooks.ts"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"C:\\\\work\\\\study\\\\kkaporfol\\\\src\\\\app\\\\portfolio\\\\page.tsx\");\n","\"use client\";\r\n\r\nimport { Variants } from \"framer-motion\";\r\n\r\nconst BasicFade: Variants = {\r\n  show: (i) => {\r\n    const delay = i * 0.2;\r\n    return {\r\n      opacity: 1,\r\n      transition: {\r\n        delay,\r\n        duration: 1,\r\n      },\r\n    };\r\n  },\r\n  hide: {\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\nconst Draw: Variants = {\r\n  show: (i) => {\r\n    const delay = i;\r\n    return {\r\n      pathLength: 1,\r\n      opacity: 1,\r\n      transition: {\r\n        pathLength: { delay, type: \"spring\", duration: 1.5, bounce: 0 },\r\n        opacity: { delay, duration: 0.01 },\r\n      },\r\n    };\r\n  },\r\n  hide: {\r\n    pathLength: 0,\r\n    opacity: 0,\r\n    transition: {\r\n      delay: 1,\r\n    },\r\n  },\r\n};\r\n\r\nexport { BasicFade, Draw };\r\n","\"use client\";\r\n\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport dynamic from \"next/dynamic\";\r\nimport Image from \"next/image\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"@modules/hooks\";\r\nimport {\r\n  setKeyword,\r\n  searchList,\r\n  setTotalPage,\r\n  setPage,\r\n  setSliceList,\r\n} from \"@modules/searchSlice\";\r\nimport { BasicFade } from \"@styles/motion\";\r\n\r\n// eslint-disable-next-line import/newline-after-import\r\nconst Modal = dynamic(() => import(\"@components/modal/modal-contents\"));\r\n\r\nexport default function Portfolio() {\r\n  const dispatch = useAppDispatch();\r\n  const searchData = useAppSelector((state) => state.searchReducer);\r\n\r\n  const handlePage = useCallback(\r\n    (e: React.ChangeEvent<unknown>, p: number) => {\r\n      dispatch(setPage(p));\r\n      dispatch(setSliceList());\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const searchValChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setKeyword(e.target.value.toLowerCase()));\r\n  };\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(searchList());\r\n    dispatch(setPage(1));\r\n    dispatch(setTotalPage());\r\n    dispatch(setSliceList());\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [modalIndex, setModalIndex] = useState<string>(\"0\");\r\n  const modalOpen = (i: string) => {\r\n    setShowModal(!showModal);\r\n    setModalIndex(i);\r\n  };\r\n  const onClickModal = (i: string) => {\r\n    modalOpen(i);\r\n  };\r\n  const keyModal = (e: React.KeyboardEvent<HTMLElement>, i: string) => {\r\n    if (e.key === \"Enter\") {\r\n      modalOpen(i);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.h2\r\n        className=\"title\"\r\n        variants={BasicFade}\r\n        initial=\"hide\"\r\n        animate=\"show\"\r\n        custom={0.2}\r\n      >\r\n        PORTFOLIO\r\n      </motion.h2>\r\n      <motion.p\r\n        className=\"title_desc\"\r\n        variants={BasicFade}\r\n        initial=\"hide\"\r\n        animate=\"show\"\r\n        custom={0.3}\r\n      >\r\n        * 로그인을 해야 볼 수 있거나 더 이상 볼 수 없는 사이트의 경우 샘플\r\n        페이지로 대체했습니다.\r\n      </motion.p>\r\n      <div className=\"content\">\r\n        <form onSubmit={onSubmit}>\r\n          <motion.div\r\n            className=\"search_wrap\"\r\n            variants={BasicFade}\r\n            initial=\"hide\"\r\n            animate=\"show\"\r\n            custom={0.4}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              placeholder=\"제목으로 검색하기\"\r\n              onChange={searchValChange}\r\n            />\r\n            <button className=\"btn_search\" type=\"submit\">\r\n              검색\r\n            </button>\r\n          </motion.div>\r\n          {/* Portfolio List */}\r\n          {searchData.sliceList.length > 0 && (\r\n            <>\r\n              <motion.ul className=\"list_wrap portfolio_wrap grid\">\r\n                <AnimatePresence>\r\n                  {searchData.sliceList.map((portfolio, index) => (\r\n                    <motion.li\r\n                      className={`item${portfolio.id} grid-item`}\r\n                      key={portfolio.id}\r\n                      variants={BasicFade}\r\n                      initial=\"hide\"\r\n                      animate=\"show\"\r\n                      exit=\"hide\"\r\n                      custom={index}\r\n                    >\r\n                      <div\r\n                        className=\"list_con\"\r\n                        tabIndex={index}\r\n                        onClick={() => onClickModal(portfolio.id)}\r\n                        onKeyDown={(e) => keyModal(e, portfolio.id)}\r\n                        role=\"button\"\r\n                      >\r\n                        <div className=\"thum_wrap\">\r\n                          <Image\r\n                            className=\"responsive_size\"\r\n                            src={portfolio.view}\r\n                            alt={portfolio.alt}\r\n                            fill\r\n                          />\r\n                        </div>\r\n                        <div className=\"info_wrap\">\r\n                          <h3> {portfolio.title} </h3>\r\n                          {portfolio.skills && (\r\n                            <ul className=\"keyword\">\r\n                              {portfolio.skills.map((skill) => (\r\n                                <li className=\"pill\" key={skill}>\r\n                                  {skill}\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </motion.li>\r\n                  ))}\r\n                </AnimatePresence>\r\n              </motion.ul>\r\n              {/* Pagination */}\r\n              <Pagination\r\n                count={searchData.totalPage}\r\n                defaultPage={1}\r\n                page={searchData.page}\r\n                boundaryCount={6}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                sx={{ margin: 2 }}\r\n                onChange={handlePage}\r\n              />\r\n              {/* //Pagination  */}\r\n            </>\r\n          )}\r\n          {searchData.sliceList.length === 0 && (\r\n            <div className=\"no_data\">검색 결과가 없습니다.</div>\r\n          )}\r\n          {/* //Portfolio List */}\r\n        </form>\r\n      </div>\r\n      {showModal && (\r\n        <Modal onClickModal={onClickModal} modalIndex={modalIndex} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport PortfolioList from \"../data/portfolio.json\";\r\n\r\ninterface PortfolioType {\r\n  id: string;\r\n  title: string;\r\n  view: string;\r\n  alt: string;\r\n  skills?: string[];\r\n  participation: string;\r\n  url: { sample?: string[]; service?: string[] };\r\n  desc?: string;\r\n}\r\n\r\ninterface SearchType {\r\n  keyword: string;\r\n  result: PortfolioType[];\r\n  totalPage: number;\r\n  page: number;\r\n  sliceList: PortfolioType[];\r\n}\r\n\r\nconst pageUnit = 12;\r\nconst pageCount = (item: number) => Math.ceil(item / pageUnit);\r\n\r\nconst initialState: SearchType = {\r\n  keyword: \"\",\r\n  result: PortfolioList.portfolios,\r\n  totalPage: pageCount(PortfolioList.portfolios.length),\r\n  page: 1,\r\n  sliceList: PortfolioList.portfolios.slice(0, pageUnit),\r\n};\r\n\r\n// 리듀서\r\nexport const searchSlice = createSlice({\r\n  name: \"search\",\r\n  initialState,\r\n  reducers: {\r\n    setKeyword: (state: SearchType, action: PayloadAction<string>) => ({\r\n      ...state,\r\n      keyword: action.payload,\r\n    }),\r\n    searchList: (state: SearchType) => ({\r\n      ...state,\r\n      result: PortfolioList.portfolios.filter((item) => {\r\n        if (state.keyword === \"\") {\r\n          return item;\r\n        }\r\n        if (item.title.toLowerCase().includes(state.keyword)) {\r\n          return item;\r\n        }\r\n        return null;\r\n      }),\r\n    }),\r\n    setTotalPage: (state) => ({\r\n      ...state,\r\n      totalPage: pageCount(state.result.length),\r\n    }),\r\n    setPage: (state, action) => ({\r\n      ...state,\r\n      page: action.payload,\r\n    }),\r\n    setSliceList: (state: SearchType) => ({\r\n      ...state,\r\n      sliceList:\r\n        state.totalPage === 1\r\n          ? state.result.slice(pageUnit * (state.page - 1))\r\n          : state.result.slice(\r\n              pageUnit * (state.page - 1),\r\n              pageUnit * (state.page - 1) + pageUnit,\r\n            ),\r\n    }),\r\n  },\r\n});\r\n\r\nexport const search = searchSlice.name;\r\nexport const { setKeyword, searchList, setTotalPage, setPage, setSliceList } =\r\n  searchSlice.actions;\r\nexport const searchReducer = searchSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport type { RootState, AppDispatch } from \"@modules/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["BasicFade","show","opacity","transition","delay","i","duration","hide","Modal","dynamic","Portfolio","dispatch","useAppDispatch","searchData","useAppSelector","state","searchReducer","handlePage","useCallback","e","p","setPage","setSliceList","showModal","setShowModal","useState","modalIndex","setModalIndex","modalOpen","onClickModal","motion","h2","className","variants","initial","animate","custom","div","form","onSubmit","preventDefault","searchList","setTotalPage","input","type","name","placeholder","onChange","searchValChange","setKeyword","target","value","toLowerCase","button","sliceList","length","ul","AnimatePresence","map","portfolio","index","li","id","exit","tabIndex","onClick","onKeyDown","keyModal","key","Image","src","view","alt","fill","h3","title","skills","skill","Pagination","count","totalPage","defaultPage","page","boundaryCount","variant","color","sx","margin","pageCount","Math","ceil","item","initialState","pageUnit","keyword","result","PortfolioList","slice","searchSlice","createSlice","reducers","action","payload","filter","includes","actions","reducer","useDispatch","useSelector"],"sourceRoot":"","ignoreList":[]}