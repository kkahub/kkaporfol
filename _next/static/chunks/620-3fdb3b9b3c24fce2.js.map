{"version":3,"file":"static/chunks/620-3fdb3b9b3c24fce2.js","mappings":"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","sources":["webpack://_N_E/../../../src/shared/lib/amp-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/image-config.ts","webpack://_N_E/../../../src/shared/lib/amp-mode.ts","webpack://_N_E/../../../src/shared/lib/image-loader.ts","webpack://_N_E/../../../src/shared/lib/side-effect.tsx","webpack://_N_E/../../src/client/image-component.tsx","webpack://_N_E/../../../src/shared/lib/get-img-props.ts","webpack://_N_E/../../../src/shared/lib/image-config-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/image-blur-svg.ts","webpack://_N_E/../../../src/shared/lib/image-external.tsx","webpack://_N_E/../../../src/shared/lib/head.tsx","webpack://_N_E/./node_modules/next/dist/api/image.js","webpack://_N_E/../../../src/shared/lib/router-context.shared-runtime.ts"],"sourcesContent":["import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","export const VALID_LOADERS = [\n  'default',\n  'imgix',\n  'cloudinary',\n  'akamai',\n  'custom',\n] as const\n\nexport type LoaderValue = (typeof VALID_LOADERS)[number]\n\nexport type ImageLoaderProps = {\n  src: string\n  width: number\n  quality?: number\n}\n\nexport type ImageLoaderPropsWithConfig = ImageLoaderProps & {\n  config: Readonly<ImageConfig>\n}\n\nexport type LocalPattern = {\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\nexport type RemotePattern = {\n  /**\n   * Must be `http` or `https`.\n   */\n  protocol?: 'http' | 'https'\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single subdomain.\n   * Double `**` matches any number of subdomains.\n   */\n  hostname: string\n\n  /**\n   * Can be literal port such as `8080` or empty string\n   * meaning no port.\n   */\n  port?: string\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\ntype ImageFormat = 'image/avif' | 'image/webp'\n\n/**\n * Image configurations\n *\n * @see [Image configuration options](https://nextjs.org/docs/api-reference/next/image#configuration-options)\n */\nexport type ImageConfigComplete = {\n  /** @see [Device sizes documentation](https://nextjs.org/docs/api-reference/next/image#device-sizes) */\n  deviceSizes: number[]\n\n  /** @see [Image sizing documentation](https://nextjs.org/docs/app/building-your-application/optimizing/images#image-sizing) */\n  imageSizes: number[]\n\n  /** @see [Image loaders configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader) */\n  loader: LoaderValue\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/app/api-reference/components/image#path) */\n  path: string\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/image#loader-configuration) */\n  loaderFile: string\n\n  /**\n   * @deprecated Use `remotePatterns` instead.\n   */\n  domains: string[]\n\n  /** @see [Disable static image import configuration](https://nextjs.org/docs/api-reference/next/image#disable-static-imports) */\n  disableStaticImages: boolean\n\n  /** @see [Cache behavior](https://nextjs.org/docs/api-reference/next/image#caching-behavior) */\n  minimumCacheTTL: number\n\n  /** @see [Acceptable formats](https://nextjs.org/docs/api-reference/next/image#acceptable-formats) */\n  formats: ImageFormat[]\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  dangerouslyAllowSVG: boolean\n\n  /** @see [Content Security Policy](https://nextjs.org/docs/api-reference/next/image#contentsecuritypolicy) */\n  contentSecurityPolicy: string\n\n  /** @see [Content Disposition Type](https://nextjs.org/docs/api-reference/next/image#contentdispositiontype) */\n  contentDispositionType: 'inline' | 'attachment'\n\n  /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#remotepatterns) */\n  remotePatterns: Array<URL | RemotePattern>\n\n  /** @see [Local Patterns](https://nextjs.org/docs/api-reference/next/image#localPatterns) */\n  localPatterns: LocalPattern[] | undefined\n\n  /** @see [Qualities](https://nextjs.org/docs/api-reference/next/image#qualities) */\n  qualities: number[] | undefined\n\n  /** @see [Unoptimized](https://nextjs.org/docs/api-reference/next/image#unoptimized) */\n  unoptimized: boolean\n}\n\nexport type ImageConfig = Partial<ImageConfigComplete>\n\nexport const imageConfigDefault: ImageConfigComplete = {\n  deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],\n  imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n  path: '/_next/image',\n  loader: 'default',\n  loaderFile: '',\n  domains: [],\n  disableStaticImages: false,\n  minimumCacheTTL: 60,\n  formats: ['image/webp'],\n  dangerouslyAllowSVG: false,\n  contentSecurityPolicy: `script-src 'none'; frame-src 'none'; sandbox;`,\n  contentDispositionType: 'attachment',\n  localPatterns: undefined, // default: allow all local images\n  remotePatterns: [], // default: allow no remote images\n  qualities: undefined, // default: allow all qualities\n  unoptimized: false,\n}\n","export function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n","import type { ImageLoaderPropsWithConfig } from './image-config'\n\nconst DEFAULT_Q = 75\n\nfunction defaultLoader({\n  config,\n  src,\n  width,\n  quality,\n}: ImageLoaderPropsWithConfig): string {\n  if (process.env.NODE_ENV !== 'production') {\n    const missingValues = []\n\n    // these should always be provided but make sure they are\n    if (!src) missingValues.push('src')\n    if (!width) missingValues.push('width')\n\n    if (missingValues.length > 0) {\n      throw new Error(\n        `Next Image Optimization requires ${missingValues.join(\n          ', '\n        )} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify(\n          { src, width, quality }\n        )}`\n      )\n    }\n\n    if (src.startsWith('//')) {\n      throw new Error(\n        `Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`\n      )\n    }\n\n    if (src.startsWith('/') && config.localPatterns) {\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasLocalMatch } =\n          require('./match-local-pattern') as typeof import('./match-local-pattern')\n        if (!hasLocalMatch(config.localPatterns, src)) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\` does not match \\`images.localPatterns\\` configured in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns`\n          )\n        }\n      }\n    }\n\n    if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {\n      let parsedSrc: URL\n      try {\n        parsedSrc = new URL(src)\n      } catch (err) {\n        console.error(err)\n        throw new Error(\n          `Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`\n        )\n      }\n\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasRemoteMatch } =\n          require('./match-remote-pattern') as typeof import('./match-remote-pattern')\n        if (\n          !hasRemoteMatch(config.domains!, config.remotePatterns!, parsedSrc)\n        ) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`\n          )\n        }\n      }\n    }\n\n    if (quality && config.qualities && !config.qualities.includes(quality)) {\n      throw new Error(\n        `Invalid quality prop (${quality}) on \\`next/image\\` does not match \\`images.qualities\\` configured in your \\`next.config.js\\`\\n` +\n          `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-qualities`\n      )\n    }\n  }\n\n  const q =\n    quality ||\n    config.qualities?.reduce((prev, cur) =>\n      Math.abs(cur - DEFAULT_Q) < Math.abs(prev - DEFAULT_Q) ? cur : prev\n    ) ||\n    DEFAULT_Q\n\n  return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${q}${\n    src.startsWith('/_next/static/media/') && process.env.NEXT_DEPLOYMENT_ID\n      ? `&dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n      : ''\n  }`\n}\n\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true\n\nexport default defaultLoader\n","import type React from 'react'\nimport { Children, useEffect, useLayoutEffect, type JSX } from 'react'\n\ntype State = JSX.Element[] | undefined\n\nexport type SideEffectProps = {\n  reduceComponentsToState: <T extends {}>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n  children: React.ReactNode\n}\n\nconst isServer = typeof window === 'undefined'\nconst useClientOnlyLayoutEffect = isServer ? () => {} : useLayoutEffect\nconst useClientOnlyEffect = isServer ? () => {} : useEffect\n\nexport default function SideEffect(props: SideEffectProps) {\n  const { headManager, reduceComponentsToState } = props\n\n  function emitChange() {\n    if (headManager && headManager.mountedInstances) {\n      const headElements = Children.toArray(\n        Array.from(headManager.mountedInstances as Set<React.ReactNode>).filter(\n          Boolean\n        )\n      ) as React.ReactElement[]\n      headManager.updateHead(reduceComponentsToState(headElements, props))\n    }\n  }\n\n  if (isServer) {\n    headManager?.mountedInstances?.add(props.children)\n    emitChange()\n  }\n\n  useClientOnlyLayoutEffect(() => {\n    headManager?.mountedInstances?.add(props.children)\n    return () => {\n      headManager?.mountedInstances?.delete(props.children)\n    }\n  })\n\n  // We need to call `updateHead` method whenever the `SideEffect` is trigger in all\n  // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s\n  // being rendered, we only trigger the method from the last one.\n  // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`\n  // singleton in the layout effect pass, and actually trigger it in the effect pass.\n  useClientOnlyLayoutEffect(() => {\n    if (headManager) {\n      headManager._pendingUpdate = emitChange\n    }\n    return () => {\n      if (headManager) {\n        headManager._pendingUpdate = emitChange\n      }\n    }\n  })\n\n  useClientOnlyEffect(() => {\n    if (headManager && headManager._pendingUpdate) {\n      headManager._pendingUpdate()\n      headManager._pendingUpdate = null\n    }\n    return () => {\n      if (headManager && headManager._pendingUpdate) {\n        headManager._pendingUpdate()\n        headManager._pendingUpdate = null\n      }\n    }\n  })\n\n  return null\n}\n","'use client'\n\nimport React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  forwardRef,\n  use,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport Head from '../shared/lib/head'\nimport { getImgProps } from '../shared/lib/get-img-props'\nimport type {\n  ImageProps,\n  ImgProps,\n  OnLoad,\n  OnLoadingComplete,\n  PlaceholderValue,\n} from '../shared/lib/get-img-props'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n} from '../shared/lib/image-config'\nimport { imageConfigDefault } from '../shared/lib/image-config'\nimport { ImageConfigContext } from '../shared/lib/image-config-context.shared-runtime'\nimport { warnOnce } from '../shared/lib/utils/warn-once'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\nimport { useMergedRef } from './use-merged-ref'\n\n// This is replaced by webpack define plugin\nconst configEnv = process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete\n\nif (typeof window === 'undefined') {\n  ;(globalThis as any).__NEXT_IMAGE_IMPORTED = true\n}\n\nexport type { ImageLoaderProps }\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\ntype ImgElementWithDataProp = HTMLImageElement & {\n  'data-loaded-src': string | undefined\n}\n\ntype ImageElementProps = ImgProps & {\n  unoptimized: boolean\n  placeholder: PlaceholderValue\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>\n  setBlurComplete: (b: boolean) => void\n  setShowAltText: (b: boolean) => void\n  sizesInput: string | undefined\n}\n\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(\n  img: ImgElementWithDataProp,\n  placeholder: PlaceholderValue,\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>,\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>,\n  setBlurComplete: (b: boolean) => void,\n  unoptimized: boolean,\n  sizesInput: string | undefined\n) {\n  const src = img?.src\n  if (!img || img['data-loaded-src'] === src) {\n    return\n  }\n  img['data-loaded-src'] = src\n  const p = 'decode' in img ? img.decode() : Promise.resolve()\n  p.catch(() => {}).then(() => {\n    if (!img.parentElement || !img.isConnected) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return\n    }\n    if (placeholder !== 'empty') {\n      setBlurComplete(true)\n    }\n    if (onLoadRef?.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event('load')\n      Object.defineProperty(event, 'target', { writable: false, value: img })\n      let prevented = false\n      let stopped = false\n      onLoadRef.current({\n        ...event,\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true\n          event.preventDefault()\n        },\n        stopPropagation: () => {\n          stopped = true\n          event.stopPropagation()\n        },\n      })\n    }\n    if (onLoadingCompleteRef?.current) {\n      onLoadingCompleteRef.current(img)\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const origSrc = new URL(src, 'http://n').searchParams.get('url') || src\n      if (img.getAttribute('data-nimg') === 'fill') {\n        if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {\n          let widthViewportRatio =\n            img.getBoundingClientRect().width / window.innerWidth\n          if (widthViewportRatio < 0.6) {\n            if (sizesInput === '100vw') {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            } else {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            }\n          }\n        }\n        if (img.parentElement) {\n          const { position } = window.getComputedStyle(img.parentElement)\n          const valid = ['absolute', 'fixed', 'relative']\n          if (!valid.includes(position)) {\n            warnOnce(\n              `Image with src \"${origSrc}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid\n                .map(String)\n                .join(',')}.`\n            )\n          }\n        }\n        if (img.height === 0) {\n          warnOnce(\n            `Image with src \"${origSrc}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`\n          )\n        }\n      }\n\n      const heightModified =\n        img.height.toString() !== img.getAttribute('height')\n      const widthModified = img.width.toString() !== img.getAttribute('width')\n      if (\n        (heightModified && !widthModified) ||\n        (!heightModified && widthModified)\n      ) {\n        warnOnce(\n          `Image with src \"${origSrc}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`\n        )\n      }\n    }\n  })\n}\n\nfunction getDynamicProps(\n  fetchPriority?: string\n): Record<string, string | undefined> {\n  if (Boolean(use)) {\n    // In React 19.0.0 or newer, we must use camelCase\n    // prop to avoid \"Warning: Invalid DOM property\".\n    // See https://github.com/facebook/react/pull/25927\n    return { fetchPriority }\n  }\n  // In React 18.2.0 or older, we must use lowercase prop\n  // to avoid \"Warning: Invalid DOM property\".\n  return { fetchpriority: fetchPriority }\n}\n\nconst ImageElement = forwardRef<HTMLImageElement | null, ImageElementProps>(\n  (\n    {\n      src,\n      srcSet,\n      sizes,\n      height,\n      width,\n      decoding,\n      className,\n      style,\n      fetchPriority,\n      placeholder,\n      loading,\n      unoptimized,\n      fill,\n      onLoadRef,\n      onLoadingCompleteRef,\n      setBlurComplete,\n      setShowAltText,\n      sizesInput,\n      onLoad,\n      onError,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const ownRef = useCallback(\n      (img: ImgElementWithDataProp | null) => {\n        if (!img) {\n          return\n        }\n        if (onError) {\n          // If the image has an error before react hydrates, then the error is lost.\n          // The workaround is to wait until the image is mounted which is after hydration,\n          // then we set the src again to trigger the error handler (if there was an error).\n          // eslint-disable-next-line no-self-assign\n          img.src = img.src\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (!src) {\n            console.error(`Image is missing required \"src\" property:`, img)\n          }\n          if (img.getAttribute('alt') === null) {\n            console.error(\n              `Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`\n            )\n          }\n        }\n        if (img.complete) {\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }\n      },\n      [\n        src,\n        placeholder,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        onError,\n        unoptimized,\n        sizesInput,\n      ]\n    )\n\n    const ref = useMergedRef(forwardedRef, ownRef)\n\n    return (\n      <img\n        {...rest}\n        {...getDynamicProps(fetchPriority)}\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading={loading}\n        width={width}\n        height={height}\n        decoding={decoding}\n        data-nimg={fill ? 'fill' : '1'}\n        className={className}\n        style={style}\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes={sizes}\n        srcSet={srcSet}\n        src={src}\n        ref={ref}\n        onLoad={(event) => {\n          const img = event.currentTarget as ImgElementWithDataProp\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }}\n        onError={(event) => {\n          // if the real image fails to load, this will ensure \"alt\" is visible\n          setShowAltText(true)\n          if (placeholder !== 'empty') {\n            // If the real image fails to load, this will still remove the placeholder.\n            setBlurComplete(true)\n          }\n          if (onError) {\n            onError(event)\n          }\n        }}\n      />\n    )\n  }\n)\n\nfunction ImagePreload({\n  isAppRouter,\n  imgAttributes,\n}: {\n  isAppRouter: boolean\n  imgAttributes: ImgProps\n}) {\n  const opts: ReactDOM.PreloadOptions = {\n    as: 'image',\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: imgAttributes.crossOrigin,\n    referrerPolicy: imgAttributes.referrerPolicy,\n    ...getDynamicProps(imgAttributes.fetchPriority),\n  }\n\n  if (isAppRouter && ReactDOM.preload) {\n    ReactDOM.preload(imgAttributes.src, opts)\n    return null\n  }\n\n  return (\n    <Head>\n      <link\n        key={\n          '__nimg-' +\n          imgAttributes.src +\n          imgAttributes.srcSet +\n          imgAttributes.sizes\n        }\n        rel=\"preload\"\n        // Note how we omit the `href` attribute, as it would only be relevant\n        // for browsers that do not support `imagesrcset`, and in those cases\n        // it would cause the incorrect image to be preloaded.\n        //\n        // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n        href={imgAttributes.srcSet ? undefined : imgAttributes.src}\n        {...opts}\n      />\n    </Head>\n  )\n}\n\n/**\n * The `Image` component is used to optimize images.\n *\n * Read more: [Next.js docs: `Image`](https://nextjs.org/docs/app/api-reference/components/image)\n */\nexport const Image = forwardRef<HTMLImageElement | null, ImageProps>(\n  (props, forwardedRef) => {\n    const pagesRouter = useContext(RouterContext)\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter\n\n    const configContext = useContext(ImageConfigContext)\n    const config = useMemo(() => {\n      const c = configEnv || configContext || imageConfigDefault\n      const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n      const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n      const qualities = c.qualities?.sort((a, b) => a - b)\n      return { ...c, allSizes, deviceSizes, qualities }\n    }, [configContext])\n\n    const { onLoad, onLoadingComplete } = props\n    const onLoadRef = useRef(onLoad)\n\n    useEffect(() => {\n      onLoadRef.current = onLoad\n    }, [onLoad])\n\n    const onLoadingCompleteRef = useRef(onLoadingComplete)\n\n    useEffect(() => {\n      onLoadingCompleteRef.current = onLoadingComplete\n    }, [onLoadingComplete])\n\n    const [blurComplete, setBlurComplete] = useState(false)\n    const [showAltText, setShowAltText] = useState(false)\n\n    const { props: imgAttributes, meta: imgMeta } = getImgProps(props, {\n      defaultLoader,\n      imgConf: config,\n      blurComplete,\n      showAltText,\n    })\n\n    return (\n      <>\n        {\n          <ImageElement\n            {...imgAttributes}\n            unoptimized={imgMeta.unoptimized}\n            placeholder={imgMeta.placeholder}\n            fill={imgMeta.fill}\n            onLoadRef={onLoadRef}\n            onLoadingCompleteRef={onLoadingCompleteRef}\n            setBlurComplete={setBlurComplete}\n            setShowAltText={setShowAltText}\n            sizesInput={props.sizes}\n            ref={forwardedRef}\n          />\n        }\n        {imgMeta.priority ? (\n          <ImagePreload\n            isAppRouter={isAppRouter}\n            imgAttributes={imgAttributes}\n          />\n        ) : null}\n      </>\n    )\n  }\n)\n","import { warnOnce } from './utils/warn-once'\nimport { getImageBlurSvg } from './image-blur-svg'\nimport { imageConfigDefault } from './image-config'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n  ImageLoaderPropsWithConfig,\n} from './image-config'\n\nimport type { CSSProperties, JSX } from 'react'\n\nexport interface StaticImageData {\n  src: string\n  height: number\n  width: number\n  blurDataURL?: string\n  blurWidth?: number\n  blurHeight?: number\n}\n\nexport interface StaticRequire {\n  default: StaticImageData\n}\n\nexport type StaticImport = StaticRequire | StaticImageData\n\nexport type ImageProps = Omit<\n  JSX.IntrinsicElements['img'],\n  'src' | 'srcSet' | 'ref' | 'alt' | 'width' | 'height' | 'loading'\n> & {\n  src: string | StaticImport\n  alt: string\n  width?: number | `${number}`\n  height?: number | `${number}`\n  fill?: boolean\n  loader?: ImageLoader\n  quality?: number | `${number}`\n  priority?: boolean\n  loading?: LoadingValue\n  placeholder?: PlaceholderValue\n  blurDataURL?: string\n  unoptimized?: boolean\n  overrideSrc?: string\n  /**\n   * @deprecated Use `onLoad` instead.\n   * @see https://nextjs.org/docs/app/api-reference/components/image#onload\n   */\n  onLoadingComplete?: OnLoadingComplete\n  /**\n   * @deprecated Use `fill` prop instead of `layout=\"fill\"` or change import to `next/legacy/image`.\n   * @see https://nextjs.org/docs/api-reference/next/legacy/image\n   */\n  layout?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectFit?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectPosition?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyBoundary?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyRoot?: string\n}\n\nexport type ImgProps = Omit<ImageProps, 'src' | 'loader'> & {\n  loading: LoadingValue\n  width: number | undefined\n  height: number | undefined\n  style: NonNullable<JSX.IntrinsicElements['img']['style']>\n  sizes: string | undefined\n  srcSet: string | undefined\n  src: string\n}\n\nconst VALID_LOADING_VALUES = ['lazy', 'eager', undefined] as const\n\n// Object-fit values that are not valid background-size values\nconst INVALID_BACKGROUND_SIZE_VALUES = [\n  '-moz-initial',\n  'fill',\n  'none',\n  'scale-down',\n  undefined,\n]\ntype LoadingValue = (typeof VALID_LOADING_VALUES)[number]\ntype ImageConfig = ImageConfigComplete & {\n  allSizes: number[]\n  output?: 'standalone' | 'export'\n}\n\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\n// Do not export - this is an internal type only\n// because `next.config.js` is only meant for the\n// built-in loaders, not for a custom loader() prop.\ntype ImageLoaderWithConfig = (p: ImageLoaderPropsWithConfig) => string\n\nexport type PlaceholderValue = 'blur' | 'empty' | `data:image/${string}`\nexport type OnLoad = React.ReactEventHandler<HTMLImageElement> | undefined\nexport type OnLoadingComplete = (img: HTMLImageElement) => void\n\nexport type PlaceholderStyle = Partial<\n  Pick<\n    CSSProperties,\n    | 'backgroundSize'\n    | 'backgroundPosition'\n    | 'backgroundRepeat'\n    | 'backgroundImage'\n  >\n>\n\nfunction isStaticRequire(\n  src: StaticRequire | StaticImageData\n): src is StaticRequire {\n  return (src as StaticRequire).default !== undefined\n}\n\nfunction isStaticImageData(\n  src: StaticRequire | StaticImageData\n): src is StaticImageData {\n  return (src as StaticImageData).src !== undefined\n}\n\nfunction isStaticImport(src: string | StaticImport): src is StaticImport {\n  return (\n    !!src &&\n    typeof src === 'object' &&\n    (isStaticRequire(src as StaticImport) ||\n      isStaticImageData(src as StaticImport))\n  )\n}\n\nconst allImgs = new Map<\n  string,\n  { src: string; priority: boolean; placeholder: PlaceholderValue }\n>()\nlet perfObserver: PerformanceObserver | undefined\n\nfunction getInt(x: unknown): number | undefined {\n  if (typeof x === 'undefined') {\n    return x\n  }\n  if (typeof x === 'number') {\n    return Number.isFinite(x) ? x : NaN\n  }\n  if (typeof x === 'string' && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10)\n  }\n  return NaN\n}\n\nfunction getWidths(\n  { deviceSizes, allSizes }: ImageConfig,\n  width: number | undefined,\n  sizes: string | undefined\n): { widths: number[]; kind: 'w' | 'x' } {\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g\n    const percentSizes = []\n    for (let match; (match = viewportWidthRe.exec(sizes)); match) {\n      percentSizes.push(parseInt(match[2]))\n    }\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01\n      return {\n        widths: allSizes.filter((s) => s >= deviceSizes[0] * smallestRatio),\n        kind: 'w',\n      }\n    }\n    return { widths: allSizes, kind: 'w' }\n  }\n  if (typeof width !== 'number') {\n    return { widths: deviceSizes, kind: 'w' }\n  }\n\n  const widths = [\n    ...new Set(\n      // > This means that most OLED screens that say they are 3x resolution,\n      // > are actually 3x in the green color, but only 1.5x in the red and\n      // > blue colors. Showing a 3x resolution image in the app vs a 2x\n      // > resolution image will be visually the same, though the 3x image\n      // > takes significantly more data. Even true 3x resolution screens are\n      // > wasteful as the human eye cannot see that level of detail without\n      // > something like a magnifying glass.\n      // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n      [width, width * 2 /*, width * 3*/].map(\n        (w) => allSizes.find((p) => p >= w) || allSizes[allSizes.length - 1]\n      )\n    ),\n  ]\n  return { widths, kind: 'x' }\n}\n\ntype GenImgAttrsData = {\n  config: ImageConfig\n  src: string\n  unoptimized: boolean\n  loader: ImageLoaderWithConfig\n  width?: number\n  quality?: number\n  sizes?: string\n}\n\ntype GenImgAttrsResult = {\n  src: string\n  srcSet: string | undefined\n  sizes: string | undefined\n}\n\nfunction generateImgAttrs({\n  config,\n  src,\n  unoptimized,\n  width,\n  quality,\n  sizes,\n  loader,\n}: GenImgAttrsData): GenImgAttrsResult {\n  if (unoptimized) {\n    return { src, srcSet: undefined, sizes: undefined }\n  }\n\n  const { widths, kind } = getWidths(config, width, sizes)\n  const last = widths.length - 1\n\n  return {\n    sizes: !sizes && kind === 'w' ? '100vw' : sizes,\n    srcSet: widths\n      .map(\n        (w, i) =>\n          `${loader({ config, src, quality, width: w })} ${\n            kind === 'w' ? w : i + 1\n          }${kind}`\n      )\n      .join(', '),\n\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({ config, src, quality, width: widths[last] }),\n  }\n}\n\n/**\n * A shared function, used on both client and server, to generate the props for <img>.\n */\nexport function getImgProps(\n  {\n    src,\n    sizes,\n    unoptimized = false,\n    priority = false,\n    loading,\n    className,\n    quality,\n    width,\n    height,\n    fill = false,\n    style,\n    overrideSrc,\n    onLoad,\n    onLoadingComplete,\n    placeholder = 'empty',\n    blurDataURL,\n    fetchPriority,\n    decoding = 'async',\n    layout,\n    objectFit,\n    objectPosition,\n    lazyBoundary,\n    lazyRoot,\n    ...rest\n  }: ImageProps,\n  _state: {\n    defaultLoader: ImageLoaderWithConfig\n    imgConf: ImageConfigComplete\n    showAltText?: boolean\n    blurComplete?: boolean\n  }\n): {\n  props: ImgProps\n  meta: {\n    unoptimized: boolean\n    priority: boolean\n    placeholder: NonNullable<ImageProps['placeholder']>\n    fill: boolean\n  }\n} {\n  const { imgConf, showAltText, blurComplete, defaultLoader } = _state\n  let config: ImageConfig\n  let c = imgConf || imageConfigDefault\n  if ('allSizes' in c) {\n    config = c as ImageConfig\n  } else {\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n    const qualities = c.qualities?.sort((a, b) => a - b)\n    config = { ...c, allSizes, deviceSizes, qualities }\n  }\n\n  if (typeof defaultLoader === 'undefined') {\n    throw new Error(\n      'images.loaderFile detected but the file is missing default export.\\nRead more: https://nextjs.org/docs/messages/invalid-images-config'\n    )\n  }\n  let loader: ImageLoaderWithConfig = rest.loader || defaultLoader\n\n  // Remove property so it's not spread on <img> element\n  delete rest.loader\n  delete (rest as any).srcSet\n\n  // This special value indicates that the user\n  // didn't define a \"loader\" prop or \"loader\" config.\n  const isDefaultLoader = '__next_img_default' in loader\n\n  if (isDefaultLoader) {\n    if (config.loader === 'custom') {\n      throw new Error(\n        `Image with src \"${src}\" is missing \"loader\" prop.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`\n      )\n    }\n  } else {\n    // The user defined a \"loader\" prop or config.\n    // Since the config object is internal only, we\n    // must not pass it to the user-defined \"loader\".\n    const customImageLoader = loader as ImageLoader\n    loader = (obj) => {\n      const { config: _, ...opts } = obj\n      return customImageLoader(opts)\n    }\n  }\n\n  if (layout) {\n    if (layout === 'fill') {\n      fill = true\n    }\n    const layoutToStyle: Record<string, Record<string, string> | undefined> = {\n      intrinsic: { maxWidth: '100%', height: 'auto' },\n      responsive: { width: '100%', height: 'auto' },\n    }\n    const layoutToSizes: Record<string, string | undefined> = {\n      responsive: '100vw',\n      fill: '100vw',\n    }\n    const layoutStyle = layoutToStyle[layout]\n    if (layoutStyle) {\n      style = { ...style, ...layoutStyle }\n    }\n    const layoutSizes = layoutToSizes[layout]\n    if (layoutSizes && !sizes) {\n      sizes = layoutSizes\n    }\n  }\n\n  let staticSrc = ''\n  let widthInt = getInt(width)\n  let heightInt = getInt(height)\n  let blurWidth: number | undefined\n  let blurHeight: number | undefined\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src\n\n    if (!staticImageData.src) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n\n    blurWidth = staticImageData.blurWidth\n    blurHeight = staticImageData.blurHeight\n    blurDataURL = blurDataURL || staticImageData.blurDataURL\n    staticSrc = staticImageData.src\n\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width\n        heightInt = staticImageData.height\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width\n        heightInt = Math.round(staticImageData.height * ratio)\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height\n        widthInt = Math.round(staticImageData.width * ratio)\n      }\n    }\n  }\n  src = typeof src === 'string' ? src : staticSrc\n\n  let isLazy =\n    !priority && (loading === 'lazy' || typeof loading === 'undefined')\n  if (!src || src.startsWith('data:') || src.startsWith('blob:')) {\n    // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true\n    isLazy = false\n  }\n  if (config.unoptimized) {\n    unoptimized = true\n  }\n  if (\n    isDefaultLoader &&\n    !config.dangerouslyAllowSVG &&\n    src.split('?', 1)[0].endsWith('.svg')\n  ) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    unoptimized = true\n  }\n\n  const qualityInt = getInt(quality)\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (config.output === 'export' && isDefaultLoader && !unoptimized) {\n      throw new Error(\n        `Image Optimization using the default loader is not compatible with \\`{ output: 'export' }\\`.\n  Possible solutions:\n    - Remove \\`{ output: 'export' }\\` and run \"next start\" to run server mode including the Image Optimization API.\n    - Configure \\`{ images: { unoptimized: true } }\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (height) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (style?.position && style.position !== 'absolute') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`\n          )\n        }\n        if (style?.width && style.width !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`\n          )\n        }\n        if (style?.height && style.height !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`\n          )\n        }\n      } else {\n        if (typeof widthInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"width\" property.`\n          )\n        } else if (isNaN(widthInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`\n          )\n        }\n        if (typeof heightInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"height\" property.`\n          )\n        } else if (isNaN(heightInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/^[\\x00-\\x20]/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot start with a space or control character. Use src.trimStart() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x20]$/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot end with a space or control character. Use src.trimEnd() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n      }\n    }\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(\n          String\n        ).join(',')}.`\n      )\n    }\n    if (priority && loading === 'lazy') {\n      throw new Error(\n        `Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`\n      )\n    }\n    if (\n      placeholder !== 'empty' &&\n      placeholder !== 'blur' &&\n      !placeholder.startsWith('data:image/')\n    ) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"placeholder\" property \"${placeholder}\".`\n      )\n    }\n    if (placeholder !== 'empty') {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        warnOnce(\n          `Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.`\n        )\n      }\n    }\n    if (qualityInt && qualityInt !== 75 && !config.qualities) {\n      warnOnce(\n        `Image with src \"${src}\" is using quality \"${qualityInt}\" which is not configured in images.qualities. This config will be required starting in Next.js 16.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-qualities`\n      )\n    }\n    if (\n      src.startsWith('/') &&\n      src.includes('?') &&\n      (!config?.localPatterns?.length ||\n        (config.localPatterns.length === 1 &&\n          config.localPatterns[0].pathname === '/_next/static/media/**'))\n    ) {\n      warnOnce(\n        `Image with src \"${src}\" is using a query string which is not configured in images.localPatterns. This config will be required starting in Next.js 16.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns`\n      )\n    }\n    if (placeholder === 'blur' && !blurDataURL) {\n      const VALID_BLUR_EXT = ['jpeg', 'png', 'webp', 'avif'] // should match next-image-loader\n\n      throw new Error(\n        `Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n        Possible solutions:\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n          - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\n            ','\n          )} (animated images not supported)\n          - Remove the \"placeholder\" property, effectively no blur effect\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`\n      )\n    }\n    if ('ref' in rest) {\n      warnOnce(\n        `Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.`\n      )\n    }\n\n    if (!unoptimized && !isDefaultLoader) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75,\n      })\n      let url: URL | undefined\n      try {\n        url = new URL(urlStr)\n      } catch (err) {}\n      if (urlStr === src || (url && url.pathname === src && !url.search)) {\n        warnOnce(\n          `Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`\n        )\n      }\n    }\n\n    if (onLoadingComplete) {\n      warnOnce(\n        `Image with src \"${src}\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.`\n      )\n    }\n\n    for (const [legacyKey, legacyValue] of Object.entries({\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot,\n    })) {\n      if (legacyValue) {\n        warnOnce(\n          `Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`\n        )\n      }\n    }\n\n    if (\n      typeof window !== 'undefined' &&\n      !perfObserver &&\n      window.PerformanceObserver\n    ) {\n      perfObserver = new PerformanceObserver((entryList) => {\n        for (const entry of entryList.getEntries()) {\n          // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n          const imgSrc = entry?.element?.src || ''\n          const lcpImage = allImgs.get(imgSrc)\n          if (\n            lcpImage &&\n            !lcpImage.priority &&\n            lcpImage.placeholder === 'empty' &&\n            !lcpImage.src.startsWith('data:') &&\n            !lcpImage.src.startsWith('blob:')\n          ) {\n            // https://web.dev/lcp/#measure-lcp-in-javascript\n            warnOnce(\n              `Image with src \"${lcpImage.src}\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.` +\n                `\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority`\n            )\n          }\n        }\n      })\n      try {\n        perfObserver.observe({\n          type: 'largest-contentful-paint',\n          buffered: true,\n        })\n      } catch (err) {\n        // Log error but don't crash the app\n        console.error(err)\n      }\n    }\n  }\n  const imgStyle = Object.assign(\n    fill\n      ? {\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          objectFit,\n          objectPosition,\n        }\n      : {},\n    showAltText ? {} : { color: 'transparent' },\n    style\n  )\n\n  const backgroundImage =\n    !blurComplete && placeholder !== 'empty'\n      ? placeholder === 'blur'\n        ? `url(\"data:image/svg+xml;charset=utf-8,${getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL: blurDataURL || '', // assume not undefined\n            objectFit: imgStyle.objectFit,\n          })}\")`\n        : `url(\"${placeholder}\")` // assume `data:image/`\n      : null\n\n  const backgroundSize = !INVALID_BACKGROUND_SIZE_VALUES.includes(\n    imgStyle.objectFit\n  )\n    ? imgStyle.objectFit\n    : imgStyle.objectFit === 'fill'\n      ? '100% 100%' // the background-size equivalent of `fill`\n      : 'cover'\n\n  let placeholderStyle: PlaceholderStyle = backgroundImage\n    ? {\n        backgroundSize,\n        backgroundPosition: imgStyle.objectPosition || '50% 50%',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage,\n      }\n    : {}\n\n  if (process.env.NODE_ENV === 'development') {\n    if (\n      placeholderStyle.backgroundImage &&\n      placeholder === 'blur' &&\n      blurDataURL?.startsWith('/')\n    ) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      placeholderStyle.backgroundImage = `url(\"${blurDataURL}\")`\n    }\n  }\n\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader,\n  })\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      let fullUrl: URL\n      try {\n        fullUrl = new URL(imgAttributes.src)\n      } catch (e) {\n        fullUrl = new URL(imgAttributes.src, window.location.href)\n      }\n      allImgs.set(fullUrl.href, { src, priority, placeholder })\n    }\n  }\n\n  const props: ImgProps = {\n    ...rest,\n    loading: isLazy ? 'lazy' : loading,\n    fetchPriority,\n    width: widthInt,\n    height: heightInt,\n    decoding,\n    className,\n    style: { ...imgStyle, ...placeholderStyle },\n    sizes: imgAttributes.sizes,\n    srcSet: imgAttributes.srcSet,\n    src: overrideSrc || imgAttributes.src,\n  }\n  const meta = { unoptimized, priority, placeholder, fill }\n  return { props, meta }\n}\n","import React from 'react'\nimport type { ImageConfigComplete } from './image-config'\nimport { imageConfigDefault } from './image-config'\n\nexport const ImageConfigContext =\n  React.createContext<ImageConfigComplete>(imageConfigDefault)\n\nif (process.env.NODE_ENV !== 'production') {\n  ImageConfigContext.displayName = 'ImageConfigContext'\n}\n","/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */\nexport function getImageBlurSvg({\n  widthInt,\n  heightInt,\n  blurWidth,\n  blurHeight,\n  blurDataURL,\n  objectFit,\n}: {\n  widthInt?: number\n  heightInt?: number\n  blurWidth?: number\n  blurHeight?: number\n  blurDataURL: string\n  objectFit?: string\n}): string {\n  const std = 20\n  const svgWidth = blurWidth ? blurWidth * 40 : widthInt\n  const svgHeight = blurHeight ? blurHeight * 40 : heightInt\n\n  const viewBox =\n    svgWidth && svgHeight ? `viewBox='0 0 ${svgWidth} ${svgHeight}'` : ''\n  const preserveAspectRatio = viewBox\n    ? 'none'\n    : objectFit === 'contain'\n      ? 'xMidYMid'\n      : objectFit === 'cover'\n        ? 'xMidYMid slice'\n        : 'none'\n\n  return `%3Csvg xmlns='http://www.w3.org/2000/svg' ${viewBox}%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='${preserveAspectRatio}' style='filter: url(%23b);' href='${blurDataURL}'/%3E%3C/svg%3E`\n}\n","import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n","'use client'\n\nimport React, { useContext, type JSX } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context.shared-runtime'\nimport { HeadManagerContext } from './head-manager-context.shared-runtime'\nimport { isInAmpMode } from './amp-mode'\nimport { warnOnce } from './utils/warn-once'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" key=\"charset\" />]\n  if (!inAmpMode) {\n    head.push(\n      <meta name=\"viewport\" content=\"width=device-width\" key=\"viewport\" />\n    )\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactElement | number | string\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      // @ts-expect-error @types/react does not remove fragments but this could also return ReactPortal[]\n      React.Children.toArray(child.props.children).reduce(\n        // @ts-expect-error @types/react does not remove fragments but this could also return ReactPortal[]\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactElement | number | string\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */\nfunction reduceComponents<T extends {} & WithInAmpMode>(\n  headChildrenElements: Array<React.ReactElement<any>>,\n  props: T\n) {\n  const { inAmpMode } = props\n  return headChildrenElements\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(inAmpMode).reverse())\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.NODE_ENV === 'development') {\n        // omit JSON-LD structured data snippets from the warning\n        if (c.type === 'script' && c.props['type'] !== 'application/ld+json') {\n          const srcMessage = c.props['src']\n            ? `<script> tag with src=\"${c.props['src']}\"`\n            : `inline <script>`\n          warnOnce(\n            `Do not add <script> tags using next/head (see ${srcMessage}). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component`\n          )\n        } else if (c.type === 'link' && c.props['rel'] === 'stylesheet') {\n          warnOnce(\n            `Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"${c.props['href']}\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component`\n          )\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\nexport default Head\n","export { default } from '../shared/lib/image-external';\nexport * from '../shared/lib/image-external';\n\n//# sourceMappingURL=image.js.map","import React from 'react'\nimport type { NextRouter } from './router/router'\n\nexport const RouterContext = React.createContext<NextRouter | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  RouterContext.displayName = 'RouterContext'\n}\n"],"names":["AmpStateContext","React","createContext","VALID_LOADERS","imageConfigDefault","deviceSizes","imageSizes","path","loader","loaderFile","domains","disableStaticImages","minimumCacheTTL","formats","dangerouslyAllowSVG","contentSecurityPolicy","contentDispositionType","localPatterns","undefined","remotePatterns","qualities","unoptimized","isInAmpMode","ampFirst","hybrid","hasQuery","defaultLoader","config","src","width","quality","q","reduce","prev","cur","Math","abs","DEFAULT_Q","encodeURIComponent","startsWith","process","__next_img_default","SideEffect","useClientOnlyLayoutEffect","useLayoutEffect","useClientOnlyEffect","useEffect","isServer","props","headManager","reduceComponentsToState","emitChange","mountedInstances","headElements","Children","toArray","Array","from","filter","Boolean","updateHead","add","children","delete","_pendingUpdate","Image","configEnv","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","sizesInput","p","decode","Promise","resolve","catch","then","parentElement","isConnected","current","event","Event","Object","defineProperty","writable","value","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","getDynamicProps","fetchPriority","use","fetchpriority","ImageElement","forwardRef","forwardedRef","srcSet","sizes","height","decoding","className","style","loading","fill","setShowAltText","onLoad","onError","rest","ownRef","useCallback","complete","ref","useMergedRef","data-nimg","ImagePreload","isAppRouter","imgAttributes","opts","as","imageSrcSet","crossOrigin","referrerPolicy","ReactDOM","preload","Head","link","rel","href","pagesRouter","useContext","RouterContext","configContext","ImageConfigContext","useMemo","c","allSizes","sort","a","b","onLoadingComplete","useRef","blurComplete","useState","showAltText","meta","imgMeta","getImgProps","imgConf","priority","INVALID_BACKGROUND_SIZE_VALUES","isStaticRequire","default","getInt","x","Number","isFinite","NaN","test","parseInt","_state","blurWidth","blurHeight","overrideSrc","blurDataURL","layout","objectFit","objectPosition","lazyBoundary","lazyRoot","Error","isDefaultLoader","customImageLoader","_","obj","layoutStyle","layoutToStyle","intrinsic","maxWidth","responsive","layoutSizes","staticSrc","widthInt","heightInt","isStaticImageData","staticImageData","JSON","stringify","ratio","round","isLazy","split","endsWith","qualityInt","imgStyle","assign","position","left","top","right","bottom","color","backgroundImage","getImageBlurSvg","includes","placeholderStyle","backgroundSize","backgroundPosition","backgroundRepeat","generateImgAttrs","widths","kind","getWidths","viewportWidthRe","percentSizes","match","exec","push","length","smallestRatio","min","s","Set","map","find","w","last","i","join","svgWidth","svgHeight","viewBox","std","preserveAspectRatio","getImageProps","imgProps","key","entries","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","list","child","type","Fragment","concat","fragmentList","fragmentChild","METATYPES","reduceComponents","headChildrenElements","reverse","unique","keys","tags","metaTypes","metaCategories","isUnique","hasKey","h","indexOf","slice","has","len","metatype","hasOwnProperty","category","categories","cloneElement","ampState","HeadManagerContext","Effect"],"sourceRoot":"","ignoreList":[11]}